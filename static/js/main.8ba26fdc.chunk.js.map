{"version":3,"sources":["redux/actions/sendAddTaskData.js","redux/actions/emitAddTaskRequest.js","components/AddPanel.js","redux/actions/updateNoteBox.js","components/NoteBox.js","components/ActionsPanel.js","redux/actions/updateTaskState.js","redux/actions/removeTask.js","components/RemoveTaskBtn.js","components/TaskContainer.js","redux/actions/updateTasksList.js","components/TodoList.js","components/MainContent.js","components/Header.js","redux/actions/loadTasksRequest.js","redux/actions/loadNoteBoxRequest.js","components/App.js","redux/index.js","redux/reducers/tasks_reducer.js","redux/reducers/noteBox_reducer.js","redux/Store.js","index.js"],"names":["sendAddTaskData","taskDesc","type","payload","emitAddTaskRequest","AddPanel","useState","taskDescription","setTaskDescription","dispatch","useDispatch","className","onSubmit","event","preventDefault","name","placeholder","value","toUpperCase","onChange","target","updateNoteBox","data","NoteBox","noteBoxText","useSelector","state","noteBox_reducer","noteBox","ActionsPanel","Component","updateTaskState","task","removeTask","taskKey","RemoveTaskBtn","props","setIsMouseOver","style","background","border","onMouseOver","onMouseLeave","onClick","key_data","TaskContainer","id","checked","key","description","textDecorationLine","color","updateTasksList","newTasks","SortableItem","sortableElement","item","SortableTasks","sortableContainer","children","TodoList","tasks","tasks_reducer","onSortEnd","oldIndex","newIndex","arrayMove","map","index","MainContent","Header","href","rel","size","loadTasksRequest","loadNoteBoxRequest","App","useEffect","sessionStorage","clear","initialState","action","localData","JSON","parse","localStorage","getItem","newTask_description","new_task","Math","floor","random","uptd_tasks","setItem","stringify","appTasks","refreshed_tasks","i","length","updated_tasks","filter","root_reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ba26fdc.chunk.js","sourcesContent":["function sendAddTaskData(taskDesc) {\r\n    return {\r\n        type: \"GET_NEW_TASK_INFO\",\r\n        payload: taskDesc\r\n    }\r\n}\r\n\r\nexport default sendAddTaskData\r\n","function emitAddTaskRequest() {\r\n    return {\r\n        type: \"ADD_TASK\",\r\n        payload: null,\r\n    }\r\n}\r\n\r\nexport default emitAddTaskRequest","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport sendAddTaskData from '../redux/actions/sendAddTaskData'\r\nimport emitAddTaskRequest from '../redux/actions/emitAddTaskRequest'\r\n\r\nfunction AddPanel() {\r\n\r\n    const [ taskDescription, setTaskDescription ] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n\r\n    const handleForm  = (event) => {\r\n        event.preventDefault()\r\n        dispatch(emitAddTaskRequest())\r\n        setTaskDescription(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"panel add-task\">\r\n            <h3 className=\"panel-title\">Add a New Task:</h3>\r\n            <form onSubmit={handleForm}>\r\n                <input \r\n                    name=\"taskDescription\" placeholder=\"Task description\" type=\"text\"\r\n                    value = {taskDescription.toUpperCase()}\r\n                    onChange={\r\n                        event => {\r\n                            setTaskDescription(event.target.value)\r\n                            dispatch(sendAddTaskData(event.target.value.toUpperCase()))\r\n                        }\r\n                    }\r\n                />\r\n                <button \r\n                    className=\"panel-button\"\r\n                    name=\"addTaskBtn\"\r\n                    type=\"submit\">\r\n                        Add\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddPanel","function updateNoteBox(data) {\r\n    return {\r\n        type: 'UPDATE_NOTEBOX',\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport default updateNoteBox","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport updateNoteBox from '../redux/actions/updateNoteBox'\r\n\r\nfunction NoteBox() {\r\n\r\n    const noteBoxText = useSelector(state => state.noteBox_reducer.noteBox)\r\n\r\n    const dispatch = useDispatch()\r\n    const handleChange = (event) => {\r\n        dispatch(updateNoteBox(event.target.value))\r\n    }\r\n\r\n    return (\r\n        <div className=\"panel noteBox\">\r\n            <h3 className=\"panel-title\" >Anotate Your Thoughts:</h3>\r\n            <textarea \r\n                onChange={handleChange}\r\n                value={noteBoxText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteBox","import React, {Component} from 'react'\r\n\r\nimport AddPanel from './AddPanel'\r\nimport NoteBox from './NoteBox'\r\n\r\nclass ActionsPanel extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-container actions\">\r\n                <AddPanel />\r\n                <NoteBox />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionsPanel","function updateTaskState(task) {\r\n    return {\r\n        type: 'UPDATE_TASK',\r\n        payload: task\r\n    }\r\n}\r\n\r\nexport default updateTaskState","function removeTask(taskKey) {\r\n    return {\r\n        type: 'REMOVE_TASK',\r\n        payload: taskKey\r\n    }\r\n}\r\n\r\nexport default removeTask","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport removeTask from '../redux/actions/removeTask'\r\n\r\nfunction RemoveTaskBtn(props) {\r\n    const dispatch = useDispatch()\r\n\r\n    const [ isMouseOVer, setIsMouseOver ] = useState(false)\r\n\r\n    const btnStyle = {\r\n        background: \"none\",\r\n        border: \"none\"\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        dispatch(removeTask(props.key_data))\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className=\"remove-button\"\r\n            style={btnStyle}\r\n            onMouseOver={() => {setIsMouseOver(true)}}\r\n            onMouseLeave={() => {setIsMouseOver(false)}}\r\n            onClick={ handleClick }\r\n        >\r\n            DELETE\r\n        \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default RemoveTaskBtn","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport updateTaskState from '../redux/actions/updateTaskState'\r\nimport RemoveTaskBtn from './RemoveTaskBtn'\r\n\r\nfunction TaskContainer(props){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const taskChecked_style = {\r\n        textDecorationLine: \"line-through\",\r\n        color: \"#bbb\"\r\n    }\r\n    const taskNonChecked_style = {\r\n        textDecorationLine: \"none\",\r\n        color: \"#000\"\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        dispatch(updateTaskState({\r\n            key: props.key_data,\r\n            description: props.description, \r\n            checked: event.target.checked\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <li className=\"item-container\">\r\n            <input \r\n                className=\"checkBox\"\r\n                type=\"checkbox\"\r\n                name=\"\" \r\n                id=\"\"\r\n                checked={ props.checked }\r\n                onChange={ handleChange }\r\n            />\r\n            <p style={props.checked ? taskChecked_style : taskNonChecked_style}>\r\n                {props.description}\r\n            </p>\r\n            < RemoveTaskBtn key_data={props.key_data}/>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TaskContainer","function updateTasksList(newTasks) {\r\n    return {\r\n        type: 'UPDATE_TASKS',\r\n        payload: newTasks\r\n    }\r\n}\r\n\r\nexport default updateTasksList","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc'\r\nimport arrayMove from 'array-move'\r\n\r\nimport TaskContainer from './TaskContainer'\r\nimport updateTasksList from '../redux/actions/updateTasksList'\r\n\r\nconst SortableItem = sortableElement(({item}) => <TaskContainer  \r\n    key={item.key} \r\n    key_data={item.key} \r\n    description={item.description} \r\n    checked={item.checked} />\r\n)\r\n\r\nconst SortableTasks = sortableContainer(({children}) => <ul>{children}</ul>)\r\n\r\n\r\nfunction TodoList() {\r\n    const tasks = useSelector(state => state.tasks_reducer.tasks)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSortEnd = ({oldIndex, newIndex}) => {\r\n        dispatch(updateTasksList(arrayMove(tasks, oldIndex, newIndex)))\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content-container todo-list-container\">\r\n                <h2>Tasks</h2>\r\n                <SortableTasks onSortEnd={handleSortEnd} className=\"todoList\">\r\n                    { tasks.map((item, index) => <SortableItem key={item.key} index={index} item={item}/>) }\r\n                </SortableTasks>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React, { Component } from 'react'\r\n\r\nimport ActionsPanel from './ActionsPanel'\r\nimport TodoList from './TodoList'\r\n\r\nclass MainContent extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <main>\r\n                < ActionsPanel />\r\n                < TodoList />\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContent","import React from 'react'\r\nimport FontAwesome from 'react-fontawesome'\r\n\r\nfunction Header (){\r\n    return (\r\n        <header>\r\n            <p>Lite Task Manager</p>\r\n            <a href=\"https://github.com/WagnoLeaoSergio/lite_task_manager\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <FontAwesome name=\"fab fa-github-alt\" size=\"2x\"/>\r\n            </a>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","function loadTasksRequest() {\r\n    return {\r\n        type: \"LOAD_TASKS\"\r\n    }\r\n}\r\n\r\nexport default loadTasksRequest","function loadNoteBoxRequest() {\r\n    return {\r\n        type: \"LOAD_NOTEBOX\"\r\n    }\r\n}\r\n\r\nexport default loadNoteBoxRequest","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './App.css'\r\n\r\nimport MainContent from './MainContent'\r\nimport Header from './Header'\r\n\r\nimport loadTasksRequest from '../redux/actions/loadTasksRequest'\r\nimport loadNoteBoxRequest from '../redux/actions/loadNoteBoxRequest'\r\n\r\n\r\nfunction App() {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        sessionStorage.clear()\r\n        dispatch(loadTasksRequest())\r\n        dispatch(loadNoteBoxRequest())\r\n    }, [])\r\n\r\n    return (\r\n            <div className=\"app-container\">\r\n                <Header />\r\n                <MainContent />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default App","const initialState = {\r\n    tasks: [],\r\n    noteBox: \"\"\r\n}\r\n\r\nexport default initialState","import initialState from '../index'\r\n\r\nfunction tasks_reducer(state=initialState, action){\r\n    \r\n    const localData = JSON.parse(localStorage.getItem('todoAPP'))\r\n\r\n    switch(action.type) {\r\n        case \"ADD_TASK\":\r\n\r\n            const newTask_description = sessionStorage.getItem('add_task_input')\r\n\r\n            if(!state.tasks || !newTask_description)\r\n                return state\r\n\r\n            const new_task = {\r\n                key: Math.floor(Math.random() * 500), \r\n                description: newTask_description, \r\n                checked: false \r\n            }\r\n\r\n            const uptd_tasks =  [ new_task, ...state.tasks ]\r\n\r\n            localStorage.setItem('todoAPP', JSON.stringify({'appTasks': uptd_tasks}))\r\n            sessionStorage.setItem('add_task_input', \"\")\r\n\r\n            return {\r\n                ...state,\r\n                tasks : uptd_tasks\r\n            }\r\n\r\n        case 'LOAD_TASKS':\r\n            return {\r\n                ...state,\r\n                tasks: localData.appTasks\r\n            }\r\n\r\n        case 'GET_NEW_TASK_INFO':\r\n            sessionStorage.setItem('add_task_input', action.payload)\r\n            return state\r\n\r\n        case 'UPDATE_TASK':\r\n            \r\n            const refreshed_tasks = [ ...state.tasks ]\r\n\r\n            for(let i = 0; i < refreshed_tasks.length; i++) {\r\n                if(refreshed_tasks[i].key === action.payload.key) {\r\n                    refreshed_tasks[i].checked = action.payload.checked\r\n                }\r\n            }\r\n\r\n            localStorage.setItem('todoAPP', JSON.stringify({'appTasks': refreshed_tasks}))\r\n\r\n            return {\r\n                ...state,\r\n                tasks: refreshed_tasks\r\n            }\r\n\r\n        case 'UPDATE_TASKS':\r\n            const updated_tasks = action.payload\r\n            localStorage.setItem('todoAPP', JSON.stringify({'appTasks': updated_tasks}))\r\n\r\n            return {\r\n                ...state,\r\n                tasks: updated_tasks\r\n            }\r\n\r\n        case 'REMOVE_TASK':\r\n            const newTasks = state.tasks.filter((task) => task.key !== action.payload)\r\n\r\n            localStorage.setItem('todoAPP', JSON.stringify({'appTasks': newTasks}))\r\n\r\n            return {\r\n                ...state,\r\n                tasks: newTasks\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default tasks_reducer","import initialState from '../index'\r\n\r\nfunction noteBox_reducer(state=initialState, action) {\r\n\r\n    const localData = JSON.parse(localStorage.getItem('todoAPP'))\r\n\r\n    switch(action.type) {\r\n        case \"UPDATE_NOTEBOX\":\r\n            localStorage.setItem('todoAPP', JSON.stringify({...localData, 'noteBox': action.payload}))\r\n\r\n            return {\r\n                ...state,\r\n                noteBox: action.payload\r\n            }\r\n\r\n        case \"LOAD_NOTEBOX\":\r\n            return {\r\n                ...state,\r\n                noteBox: localData.noteBox\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default noteBox_reducer","import { createStore, combineReducers } from 'redux'\r\n\r\nimport tasks_reducer from './reducers/tasks_reducer'\r\nimport noteBox_reducer from './reducers/noteBox_reducer'\r\n\r\nconst root_reducer = combineReducers({ tasks_reducer, noteBox_reducer })\r\nconst store = createStore(root_reducer)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/Store'\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}